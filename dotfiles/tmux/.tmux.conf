## prefix key
set-option -g prefix C-t
unbind-key C-b
bind-key C-t send-prefix


## key bindings
bind '"' split-window -vc "#{pane_current_path}"
bind '%' split-window -hc "#{pane_current_path}"
bind 'c' new-window -c "#{pane_current_path}"
bind-key d confirm-before "detach-client"
bind-key m command-prompt "split-window 'exec man %%'"
bind-key ^t last-pane
unbind-key f
bind-key / command-prompt "find-window '%%'"
unbind-key r
bind-key r source-file ~/.tmux.conf
unbind-key s
bind-key s command-prompt "select-window -t '%%'"
#bind e setw synchronize-panes on
#bind E setw synchronize-panes off
# copy
bind-key -t vi-copy v begin-selection
# log output
bind-key H pipe-pane 'cat >> $HOME/log/tmux-#W.log' \; display-message 'Started logging to $HOME/log/tmux-#W.log'
bind-key h pipe-pane \; display-message 'Ended logging to $HOME/log/tmux-#W.log'
# peco
bind-key w split-window -c '#{pane_current_path}' "tmux list-windows -F '#{window_index}: #{window_name}#{window_flags} (#{window_panes} panes) #{pane_current_path} #{?window_active, (active),}' | peco --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | xargs tmux select-window -t"
bind-key P run-shell 'tmux split-window -c #{pane_current_path} "tmux list-buffer | peco | cut -f1 -d: | xargs tmux paste-buffer -t #{pane_index} -b"'


## options
set-option -s escape-time 0
set-option -g base-index 1
set-option -g bell-action any
set-option -g bell-on-alert on
set-option -g buffer-limit 10
set-option -g visual-bell on
set-option -g history-limit 10000
set-option -g repeat-time 500
set-option -g set-remain-on-exit off
set-option -g set-titles on
set-option -g monitor-activity on
set-option -g visual-activity on
set-option -g pane-active-border-bg cyan
set-option -g pane-active-border-fg black
set-option -g status on
set-option -g status-bg yellow
set-option -g status-fg black
set-option -g status-interval 5
set-option -g status-keys emacs
set-option -g status-position bottom
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 60
set-option -g status-left "#(~/.tmux.d/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.tmux.d/tmux-powerline/powerline.sh right)"
#set-option -g status-utf8 on
set-option -ag terminal-overrides ",mlterm:Ms=\\E]52;%p1%s;%p2%s\\7"
#set-option -g mode-mouse on
#set-option -g mouse-resize-pane on
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
#set-option -g mouse-utf8 on
if-shell 'test "$(uname -s)" = Darwin && which reattach-to-user-namespace > /dev/null 2>&1' 'source-file ~/.tmux-reattach-to-user-namespace.conf'

## window options
set-window-option -g aggressive-resize on
set-window-option -g automatic-rename on
set-window-option -g clock-mode-colour blue
set-window-option -g clock-mode-style 24
set-window-option -g mode-bg yellow
set-window-option -g mode-fg red
set-window-option -g mode-keys vi
#set-window-option -g window-status-current-bg green
#set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-attr bold
#set-window-option -g window-status-current-format "#[fg=colour233, bg=colour33]⮀#[fg=colour255, bg=colour33] #I ⮁ #W#T #[fg=colour33, bg=colour233]⮀"
set-window-option -g window-status-current-format "#[fg=colour233, bg=colour33]⮀#[fg=colour255, bg=colour33] #I ⮁ #W #[fg=colour33, bg=colour233]⮀"
set-window-option -g utf8 on


#select-layout even-vertical


set -g @tpm_plugins " \
    tmux-plugins/tpm \
    tmux-plugins/tmux-sidebar \
    tmux-plugins/tmux-copycat \
    tmux-plugins/tmux-open \
    tmux-plugins/tmux-resurrect \
    tmux-yank/tmux-yank \
    tmux-plugins/tmux-battery \
    tmux-plugins/tmux-online-status \
"

# Initialize tpm
run-shell ~/.tmux.d/plugins/tpm/tpm
