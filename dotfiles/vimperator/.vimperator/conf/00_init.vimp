"" key bindings --------------------
" move cursor
"noremap j 5j
"noremap k 5k
noremap J <C-d>
noremap K <C-u>

" open/close tab
noremap T :tabopen<CR>
noremap <C-q> :tabclose<CR>
" select next/previous tab
noremap } gt
noremap { gT
" move current tab left/right
noremap <C-S-]> :tabmove! +1<CR>
noremap <C-S-[> :tabmove! -1<CR>

"noremap <Space> :forward<CR>
"noremap b :back<CR>
noremap U :open<Space>

noremap <C-g> <Esc>
noremap U :undo<Space>
"noremap p <Nop>
"noremap P <Nop>
"noremap gP <Nop>

" set/jump mark-a
"noremap _ ma
"noremap } `a

" disable css
"noremap! :set invusermode<CR>

" change guioptions
noremap <A-b> :set guioptions+=b<CR>
noremap <A-B> :set guioptions-=b<CR>
" Unhidden and hidden the menubar and the toolbar
noremap <A-Up> :set guioptions+=mT<CR>
noremap <A-Down> :set guioptions-=mT<CR>

let mapleader = ","
noremap <Leader>re :mb reblog<CR>
noremap <Leader>pre :mb pinned-link | reblog<CR>
noremap <Leader>pclr :mb pinned-link | clear-pin<CR>
"noremap <Leader>re :tombloo ReBlog\ -\ Tumblr<CR> d
noremap <Leader>rlr :bmlreadlater<CR>
noremap <Leader>bmk :sbm [archive]<CR>
noremap <Leader>sc :viewSBMComments<CR>
noremap <Leader>gc :applaunch Google\ Chrome<CR>
noremap <Leader>dic :sidebar Mouseover Dictionary<CR>
noremap <Leader>ever :menu ツール-Add_to_Evernote<CR>
noremap <Leader>love :menu ツール-Fire.fm-Love<CR>
noremap <Leader>block :menu ツール-Fire.fm-禁止<CR>
noremap <Leader>nico :menu View-NicoFox_Download_Manager<CR>
noremap <Leader>video :set! browser.sessionstore.interval=300000<CR>

" command line
cnoremap <C-A> <Home>
cnoremap <C-E> <End>
cnoremap <C-F> <Right>
cnoremap <C-B> <Left>
cnoremap <Esc>f <S-Right>
cnoremap <Esc>b <S-Left>
" compatibility with w3m
cnoremap <C-n> <Tab>
cnoremap <C-p> <S-Tab>
" compatibility with vim
cnoremap <C-r>* <S-Insert>


"" options --------------------
set cdpath=$HOME,$HOME/Desktop
"set complete=lS
set complete=l
set defsearch=google
set editor='emacsclient -a emacs -n'
set focuscontent
"set followhints=0
set guioptions+=Bbrn
set hintmatching=custom
set history=1000
set hlsearch
set ignorecase
set incsearch
set insertmode
"set laststatus=2
set loadplugins
set maxitems=10
set messages=100
set more
set newtab=all
"set pageinfo+=c
"set popups=1
set runtimepath='~/.vimperator'
"set scroll=0
set shell=$SHELL
set showmode
"set showstatuslinks=1
"set showtabline=2
set smartcase
set suggestengines='google,wikipedia'
"set titlestring=Vimperator
"set verbose=9
set visualbell
set wildcase=smart
"set wildignore=".\.o,\..\.s[a-z]{2}"
"set wildmode="list:full"
set wildoptions=auto
"]]
set nextpattern+='next, 次(の)?ページ,\b次.*,→\b,下一頁,Следующая,다음'
"[[
set previouspattern+='prev, 前(の)?ページ,\b前.*,\b←'


"" set preferences --------------------
set! accessibility.typeaheadfind.casesensitive=1
set! browser.cache.memory.capacity=24576
set! browser.tabs.closeButtons=2
set! browser.enabel_automatic_image_resizing=false
set! browser.sessionstore.max_tabs_undo=20
"set! browser.tabs.tabMinWidth=50
set! browser.urlbar.maxRichResults=20
set! config.trim_on_minimize=true
set! layout.word_select.eat_space_to_next_word=false
set! ui.key.generalAccessKey=0
" spell check
set! layout.spellcheckDefault=2
set! spellchecker.dictionary=en-US
set! extensions.treestyletab.tabbar.shrunkenWidth=40
set! extensions.treestyletab.tabbar.width=200


"" commands --------------------
command -nargs=+ alc mr alc <args>


"" abbreviations --------------------


"" colorscheme --------------------
colorscheme my


"" QuickMarks --------------------
qmark m https://mail.google.com/
qmark r http://www.google.com/reader/
qmark d http://del.icio.us/tanda/
qmark v http://localhost:10010/


"" Hints --------------------
javascript <<EOM
hints.addMode("m", "Open movie",
  function(elem, uri) {
    if (/^http:\/\/\w+\.youtube\.com\/watch/.test(uri) && !/&fmt=22/.test(uri)) {
      uri += "&fmt=22";
    }
    liberator.open(uri, liberator.NEW_TAB);
  },
  function() "//a[contains(@href,'youtube.com') or contains(@href,'nicovideo.jp')]"
);

hints.addMode("i", "Focus to textbox",
  function(elem) elem.focus(),
  function() "//input[not(@type='hidden')] | //textarea | //xhtml:input[not(@type='hidden')] | //xhtml:textarea"
);
EOM


"" other --------------------
javascript <<EOM
  document.getElementById("liberator-multiline-output").parentNode.maxHeight="400px"
  //document.getElementById("liberator-completions").parentNode.maxHeight="400px"
EOM


"" plugin settings --------------------
" applauncher
js <<EOM
liberator.globalVariables.applauncher_list = [
  [ 'Google Chrome', 'google-chrome', '%URL%'],
  [ 'Safari', '/Applications/Safari.app/Contents/MacOS/Safari', '%URL%'],
];
liberator.globalVariables.applauncher_charset = 'Shift_JIS';
EOM

" auto_word_select_mode
js <<EOM
liberator.registerObserver("enter", function() {
  mappings.addUserMap(
    [modes.AUTO_WORD_SELECT],
    ["s"],
    "Translate selected word by multi_requester.js.",
    function() {
      // FIXME:
      // A present mode is preserved in the stack beforehand by the push() method
      // because it doesn't return to AUTO_WORD_SELECT mode before that when
      // returning from the OUTPUT_MULTILINE mode.
      modes.push(modes.AUTO_WORD_SELECT, null, true);

      var selText = content.getSelection().toString();
      var pattern = /[a-zA-Z]+/;
      selText = pattern.test(selText) ? pattern.exec(selText) : selText;
      events.feedkeys(":mr alc " + selText + "<CR>", true, true);
    }
  );
});
EOM

" browser_object.js
"let g:browser_object_prefix = ','
let g:browser_object_prefix = ''

" char-hints-mod2.js
let g:hintchars="asdfghjklrtyu"

" copy.js
javascript <<EOM
liberator.globalVariables.copy_templates = [
  { label: 'titleAndURL',    value: '%TITLE% %URL%' },
  { label: 'title',          value: '%TITLE%' },
  { label: 'hatena',         value: '[%URL%:title=%TITLE%]' },
  { label: 'hatenacite',     value: '>%URL%:title=%TITLE%>\n%SEL%\n<<' },
  { label: 'markdown',       value: '[%SEL%](%URL% "%TITLE%")' },
  { label: 'htmlblockquote', value: '<blockquote cite="%URL%" title="%TITLE%">%HTMLSEL%</blockquote>' }
];
EOM

" direct_bookmark.js
let g:direct_sbm_use_services_by_tag = "d"
let g:direct_sbm_use_services_by_post = "d"
let g:direct_sbm_is_normalize = "false"
let g:direct_sbm_is_use_migemo = "true"

" feedSomeKeys_2
autocmd LocationChange .* :fmapc
autocmd LocationChange .* :set! browser.sessionstore.interval=120000
autocmd LocationChange 'mail\.google\.com/mail' :fmap! -depth 4 c / j k n p o u e x s r a # [ ] z ? gi gs gt gd ga gc
autocmd LocationChange 'www\.google\.com/calendar/' :fmap! -vkey -event keydown t a d w m x c e <Del> / + q s ?
autocmd LocationChange 'www\.rememberthemilk\.com/home' :fmap! t c p d f g s u l y r z 1 2 3 4 <Del> a n k j i h m <Tab> <Esc>
autocmd LocationChange 'www\.google\.(com|co\.jp)/reader' :fmap! -vkey j k <Space> n p o <Enter> s S m t v A 1 2 r N P X O gh ga gs gt gu u / ? z
autocmd LocationChange 'reader\.livedoor\.com/reader' :fmap! j k s a p o v c <Space> <S-Space> z b < >
autocmd LocationChange 'friendfeed\.com/' :fmap! -vkey -event keydown p P q / gh gd gm gb
autocmd LocationChange 'localhost:10010' :fmap! j k h l r o
autocmd LocationChange 'www\.youtube\.(com|co\.jp)' :set! browser.sessionstore.interval=300000
autocmd LocationChange 'www\.nicovideo\.jp' :set! browser.sessionstore.interval=300000

" ime_control.js
let g:ex_ime_mode = "inactive"

" ldrize_cooperation.js
let g:ldrc_captureMappings = "['t', 'h', 'l', 'j', 'k', 'p', 'o', '?']"
let g:ldrc_intelligence_bind = "true"
let g:ldrc_skip = "0.25"

" localkeymode.js
let g:localkeymode_enable = "true"
javascript <<EOM
liberator.globalVariables.localKeyMappings =
[
  [/[a-z]+\.youtube\.com\/watch/,
    [
      ['p s l m i > <'],
      ['p', ':stplay'],
      ['s', ':stseek'],
      ['l', ':stlarge'],
      ['m', ':stmute'],
//    ['i', ':ytinfo'],
      ['>', ':stseek! 10'],
      ['<', ':stseek! -10']
    ]
  ],
  [/www\.nicovideo\.jp\/watch\//,
    [
      ['p s l m i c > <'],
      ['p', ':stplay'],
      ['s', ':stseek'],
      ['l', ':stlarge'],
      ['m', ':stmute'],
//    ['i', ':nicoinfo'],
      ['c', ':stcomment'],
      ['>', ':stseek! 10'],
      ['<', ':stseek! -10']
    ]
  ]
];
EOM

" migratestatusbar
javascript <<EOM
    liberator.globalVariables.migrate_elements = [
        {
            // star button of awesome bar
            id:    'star-button',
            dest:  'security-button',
            after: true,
        },
        {
            // icon that show the existence of RSS and Atom on current page
            id:    'feed-button',
            dest:  'security-button',
            after: true,
        },
        {
            // favicon of awesome bar
            id:    'page-proxy-stack',
            dest:  'liberator-statusline',
            after: false,
        },
    ];
EOM

" multi_requester.js
javascript <<EOM
liberator.globalVariables.multi_requester_mappings = [
  [',ma', 'alc',  , 'args'],
];
EOM

javascript <<EOM
liberator.globalVariables.multi_requester_siteinfo = [
  {
    name:           'weather-yahoo',
    description:    'Yahoo!天気情報',
    url:            'http://search.weather.yahoo.co.jp/bin/search?pref=all&p=%s',
    xpath:          'id("cat-pass") | id("yjw_pinpoint_today") | id("yjw_pinpoint_tomorrow") | id("yjw_week")',
    srcEncode:      'EUC-JP',
    extractLink:    '//table[@class="yjw_table3"]/descendant::a[1]'
  },
];
EOM

" nextlink.js
"let g:nextlink_followlink = "true"

" notifier.js
javascript <<EOM
liberator.globalVariables.observer_growl_settings = {
    'Hatelabo bottle': { hide: true },
    'Hatena::Message': { hide: true },
    'liberator.echomsg': { life: 1 },
    'Twitter': { life: 3 },
    'Wassr': { hide: true },
    'Weather forecast by Yahoo!': { life: 3 }
};

liberator.globalVariables.subject_liberator_echomsg_filter = [
    'Auto commands for',
    '^autocommand'
];

liberator.globalVariables.subject_weather_yahoo_urls = [
    "http://weather.yahoo.co.jp/weather/jp/13/4410/13117/1150053.html",
    "http://weather.yahoo.co.jp/weather/jp/13/4410/13101/1010064.html"
];
EOM

" proxy.js
javascript <<EOM
liberator.globalVariables.proxy_settings = [
  {
    conf_name: 'disable',
    conf_usage: 'direct connection',
    settings: [
    {
      label: 'type',
      param: 0
    }
    ]
  },
  {
    conf_name: 'polipo',
    conf_usage: 'use polipo cache proxy',
    settings: [
    {
      label: 'type',
      param: 1
    },
    {
      label: 'http',
      param: 'localhost'
    },
    {
      label: 'http_port',
      param: 8123
    }
    ]
  }
];
EOM

" refcontrol.js


" scenario-actor
javascript <<EOM
liberator.globalVariables.userScenario = {
    DOMContentLoaded: [
    { // good by hatena keyword
        pattern: 'http://d.hatena.ne.jp/keyword/',
        action: [
            {sleep: 1000},
            {follow: '//a[contains(@href,"http://ja.wikipedia.org/wiki")]'},
        ],
    },
    ]
};
EOM

" toggler.js


"" other setting --------------------
" add Mapping `C-c' copy or stop loading
javascript <<EOM
modules.mappings.addUserMap([modes.NORMAL], ['<C-c>'],
  'Copy selected text or ',
  function () {
    var sel = liberator.buffer.getCurrentWord();
    if (sel) {
      liberator.copyToClipboard(sel, true);
      echo('Yanked: ' + liberator.util.escapeHTML(sel) );
    } else {
      BrowserStop();
      liberator.echo('Stopped loading !');
    }
  } , {}
);
EOM

" show feed-button to statusbar
javascript <<EOM
(function () {
var feedPanel = document.createElement('statusbarpanel');
var feedButton = document.getElementById('feed-button');
  feedPanel.setAttribute('id','feed-panel-clone');
  feedPanel.appendChild(feedButton.cloneNode(true));
  feedButton.parentNode.removeChild(feedButton);
  document.getElementById('status-bar')
    .insertBefore(feedPanel,document.getElementById('security-button'));
})();
EOM

cd $HOME

source! $HOME/.vimperatorrc.local

echo "Get ready!!"

loadplugins
" cache sbm tags
btags

" vim: set ft=vimperator:
