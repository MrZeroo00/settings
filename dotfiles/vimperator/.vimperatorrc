"" plugin_loader
let g:plugin_loader_roots = '~/.vimperator/_plugin/coderepos,~/.vimperator/_plugin/other';
javascript <<EOM
liberator.globalVariables.plugin_loader_plugins = [
    '_libly',
    '_smooziee',
    'appendAnchor',
//   'asdfghjkl',
//   'auto_detect_link',
//   'auto_reload',
//   'auto_source',
//   'bookmarktoolbar-hint',
    'browser_object',
//   'bufferecho',
    'caret-hint',
    'char-hints-mod2',
    'commandBookmarklet',
    'command_menu',
//   'cookie',
    'copy',
//   'cpan-search',
    'delicious_search',
    'direct_bookmark',
    'encodingSwitcherCommand',
//   'every',
//   'exShowElementInfo',
//   'ex_autocmd',
//   'exopen',
    'feedSomeKeys_2',
//   'feeder',
//   'fetchyoutube',
//   'foxytunes',
    'gmperator',
//   'googlekanji',
//   'googlesuggest',
    'growl.css',
//   'gvimail',
    'hd-youkai-youtube',
//   'hidecritter',
//   'highlight',
    'hints-yank-paste',
    'history-search-backward',
//   'i_love_echo',
//   'imageextender',
    'ime_controller',
    'ldrize_cooperation',
    'ldrize_cooperation_fetch_flv',
//   'literal-bmark',
    'lo',
//   'localkeymode',
    'loginManager',
    'maine_coon',
//   'mkcolor',
    'moreqmarks',
    'mouseinspect',
    'migemized_find',
    'migemo_completion',
    'migemo_hint',
//   'migratestatusbar',
    'multi_requester',
    'nextlink',
//   'nicontroller',
    'notifier',
    'observer_growl',
//   'options-migrate-user-pref',
//   'peekpage',
    'pluginManager',
//   'proxy',
//   'refcontrol',
//   'relatedBlogSearch',
    'relative_move',
//   'sbmcommentsviewer',
    'scenario-actor',
    'scroll_div',
//   'speeddial',
//   'spellchecker',
    'splitBrowser',
//   'statstat',
//   'stella',
    'tinymenu',
    'toggler',
    'tombloo',
    'treeStyleTab',
//   'twitter',
//   'uaSwitch',
    'ubiquity',
    'walk-input',
//   'xpath_hint',
    'xpathBlink',
//   'xpcom_inspector',
//   'yetmappings',
//   'youtubeamp',
].join(',');
EOM


"" key bindings --------------------
" move cursor
"noremap j 5j
"noremap k 5k
noremap J <C-d>
noremap K <C-u>

" open/close tab
noremap T :tabopen<CR>
noremap <C-q> :tabclose<CR>
" select next/previous tab
noremap } gt
noremap { gT
" move current tab left/right
map <C-}> :tabmove! +1<CR>
map <C-{> :tabmove! -1<CR>

"noremap <Space> :forward<CR>
"noremap b :back<CR>
noremap U :open<Space>

noremap <C-G> <Esc>

" set/jump mark-a
"noremap _ ma
"noremap } `a

" disable css
"map! :set invusermode<CR>

" change guioptions
map <A-b> :set guioptions+=b<CR>
map <A-B> :set guioptions-=b<CR>
" Unhidden and hidden the menubar and the toolbar
map <A-Up> :set guioptions+=mT<CR>
map <A-Down> :set guioptions-=mT<CR>

noremap ,t :mb tumblr.reblog<CR>
noremap ,rlater :bmlreadlater<CR>
noremap ,bmark :sbm [archive]<CR>
noremap ,dic :sidebar Mouseover Dictionary<CR>
noremap ,ever :menu ツール-Add_to_Evernote<CR>
noremap ,love :menu ツール-Fire.fm-Love<CR>
noremap ,block :menu ツール-Fire.fm-禁止<CR>

" command line
cnoremap <C-A> <Home>
cnoremap <C-E> <End>
cnoremap <C-F> <Right>
cnoremap <C-B> <Left>
cnoremap <Esc>f <S-Right>
cnoremap <Esc>b <S-Left>
" compatibility with w3m
cnoremap <C-n> <Tab>
cnoremap <C-p> <S-Tab>
" compatibility with vim
cnoremap <C-r>* <S-Insert>


"" options --------------------
"set complete=bSl
set complete=l
"set defsearch=g
set editor='emacsclient -a emacs -n'
set focuscontent
set guioptions+=Brn
set hintmatching=custom
set history=1000
set hlsearch
set newtab=all
set suggestengines='g,w'
"set titlestring=Vimperator
"set verbose=9
set visualbell
set wildoptions=auto
"]]
set nextpattern+='next, 次(の)?ページ,\b次.*,→\b,下一頁,Следующая,다음'
"[[
set previouspattern+='prev, 前(の)?ページ,\b前.*,\b←'


"" colorscheme --------------------
colorscheme my


"" set preferences --------------------
set! accessibility.typeaheadfind.casesensitive=1
set! browser.enabel_automatic_image_resizing=false
"set! browser.tabs.tabMinWidth=50
set! browser.urlbar.maxRichResults=20
set! layout.word_select.eat_space_to_next_word=false
set! ui.key.generalAccessKey=0
" spell check
set! layout.spellcheckDefault=2
set! spellchecker.dictionary=en-US


"" QuickMarks --------------------
qmark g https://mail.google.com/
qmark l http://reader.livedoor.com/reader/


"" plugin settings --------------------
" browser_object.js
let g:browser_object_prefix = ','

" char-hints-mod2.js
let g:hintchars="ASDFGHJKL"

" copy.js
javascript <<EOM
liberator.globalVariables.copy_templates = [
  { label: 'titleAndURL',    value: '%TITLE% %URL%' },
  { label: 'title',          value: '%TITLE%' },
  { label: 'hatena',         value: '[%URL%:title=%TITLE%]' },
  { label: 'hatenacite',     value: '>%URL%:title=%TITLE%>\n%SEL%\n<<' },
  { label: 'markdown',       value: '[%SEL%](%URL% "%TITLE%")' },
  { label: 'htmlblockquote', value: '<blockquote cite="%URL%" title="%TITLE%">%HTMLSEL%</blockquote>' }
];
EOM

" direct_bookmark.js
let g:direct_sbm_use_services_by_tag = "d"
let g:direct_sbm_use_services_by_post = "d"
let g:direct_sbm_is_normalize = "false"
let g:direct_sbm_is_use_migemo = "true"

" feedSomeKeys_2
autocmd LocationChange .* :fmapc
autocmd LocationChange 'reader\\.livedoor\\.com/reader' :fmap! j k s a p o v c <Space> <S-Space> z b < >
autocmd LocationChange 'mail\\.google\\.com/mail' :fmap! -depth 4 c / j k n p o u e x s r a # [ ] z ? gi gs gt gd ga gc

" ime_control.js
let g:ex_ime_mode = "inactive"

" ldrize_cooperation.js
let g:ldrc_captureMappings = "['t', 'h', 'l', 'j', 'k', 'p', 'o', '?']"
let g:ldrc_intelligence_bind = "true"
let g:ldrc_skip = "0.25"

" multi_requester.js
javascript <<EOM
liberator.globalVariables.multi_requester_mappings = [
  [',ma', 'alc',  , 'args'],
];
EOM

javascript <<EOM
liberator.globalVariables.multi_requester_siteinfo = [
  {
    name:           'weather-yahoo',
    description:    'Yahoo!天気情報',
    url:            'http://search.weather.yahoo.co.jp/bin/search?pref=all&p=%s',
    xpath:          'id("cat-pass") | id("yjw_pinpoint_today") | id("yjw_pinpoint_tomorrow") | id("yjw_week")',
    srcEncode:      'EUC-JP',
    extractLink:    '//table[@class="yjw_table3"]/descendant::a[1]'
  },
];
EOM

" nextlink.js
"let g:nextlink_followlink = "true"

" proxy.js
javascript <<EOM
liberator.globalVariables.proxy_settings = [
  {
    conf_name: 'disable',
    conf_usage: 'direct connection',
    settings: [
    {
      label: 'type',
      param: 0
    }
    ]
  },
  {
    conf_name: 'polipo',
    conf_usage: 'use polipo cache proxy',
    settings: [
    {
      label: 'type',
      param: 1
    },
    {
      label: 'http',
      param: 'localhost'
    },
    {
      label: 'http_port',
      param: 8123
    }
    ]
  }
];
EOM

" refcontrol.js


" toggler.js


"" other setting --------------------
" add Mapping `C-c' copy or stop loading
javascript <<EOM
modules.mappings.addUserMap([modes.NORMAL], ['<C-c>'],
  'Copy selected text or ',
  function () {
    var sel = liberator.buffer.getCurrentWord();
    if (sel) {
      liberator.copyToClipboard(sel, true);
      echo('Yanked: ' + liberator.util.escapeHTML(sel) );
    } else {
      BrowserStop();
      liberator.echo('Stopped loading !');
    }
  } , {}
);
EOM

" show feed-button to statusbar
javascript <<EOM
(function () {
var feedPanel = document.createElement('statusbarpanel');
var feedButton = document.getElementById('feed-button');
  feedPanel.setAttribute('id','feed-panel-clone');
  feedPanel.appendChild(feedButton.cloneNode(true));
  feedButton.parentNode.removeChild(feedButton);
  document.getElementById('status-bar')
    .insertBefore(feedPanel,document.getElementById('security-button'));
})();
EOM


"" abbreviations --------------------

"source! $HOME/.vimperatorrc.local

echo "Get ready!!"

" vim: set ft=vimperator:
