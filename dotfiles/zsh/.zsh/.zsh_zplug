export ZPLUG_HOME=$HOME/.zsh/zplug
export ZPLUG_REPOS=$HOME/.zsh/zplug_repos
export ZPLUG_USE_CACHE=true
source $ZPLUG_HOME/init.zsh

zplug "mafredri/zsh-async", from:github

#zplug "themes/kolo", as:theme, from:oh-my-zsh
zplug "sindresorhus/pure", use:"pure.zsh", from:github, as:theme

#zplug "plugins/command-not-found", from:oh-my-zsh
#zplug "djui/alias-tips"
zplug "lib/clipboard", from:oh-my-zsh, if:"[[ $OSTYPE == *darwin* ]]"
zplug "plugins/osx", from:oh-my-zsh
#zplug "plugins/git", from:oh-my-zsh
#zplug "plugins/vagrant", from:oh-my-zsh # included /usr/local/share/zsh-completions
zplug "docker/cli", use:"contrib/completion/zsh/_docker", lazy:true

zplug "zsh-users/zsh-completions", use:"src/_*", lazy:true
zplug "/usr/local/share/zsh/site-functions", use:"_*", from:local, lazy:true
#zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "b4b4r07/zsh-vimode-visual", defer:3
zplug "Tarrasch/zsh-functional"

#zplug "modules/prompt", from:prezto
zplug "b4b4r07/enhancd", use:"init.sh"
ENHANCD_FILTER=fzf-tmux:fzf:peco
ENHANCD_HYPHEN_ARG="-ls"
ENHANCD_DOT_ARG="-up"
#zplug "jamesob/desk" # homebrew
zplug "marzocchi/zsh-notify"
#zplug "themattrix/bash-concurrent"
#zplug "greymd/tmux-xpanes" # homebrew

zplug "Tarrasch/zsh-colors"
zplug "b4b4r07/emoji-cli"
zplug "mrowa44/emojify", as:command
#zplug "holman/spark", as:command # homebrew
zplug "b4b4r07/http_code"

zplug 'supercrabtree/k', use:'!*'
k() {
  unfunction k
  source "${ZPLUG_REPOS}/supercrabtree/k/k.sh"
  k "$@"
}

#zplug "zsh-users/zaw"
#zstyle ':filter-select' case-insensitive yes

CDD_FILE=${HOME}/.zsh/cdd_pwd_list
zplug "m4i/cdd", use:'cdd'
typeset -ga chpwd_functions
chpwd_functions+=_cdd_chpwd

zplug "mollifier/anyframe" #, use:'anyframe-functions/{actions,selectors,sources,widgets}/*', lazy:true
zstyle ":anyframe:selector:" use peco
zstyle ":anyframe:selector:peco:" command 'peco --layout bottom-up'
zle -N anyframe-widget-put-history
bindkey '^R' anyframe-widget-put-history
cd-ghq-repository() {
  zle push-line && LBUFFER='builtin cd $(ghq list -p | peco)' && zle accept-line
}
zle -N cd-ghq-repository
bindkey '^]' cd-ghq-repository
#bindkey '^x^k' anyframe-widget-kill
#bindkey '^x^a' anyframe-widget-git-add

export NVM_DIR="${HOME}/.nvm"
export NVM_LAZY_LOAD=true
zplug "lukechilds/zsh-nvm"

if ! zplug check --verbose; then
  printf "Install? [y/N]: "
  if read -q; then
    echo; zplug install
  fi
fi

zplug load
