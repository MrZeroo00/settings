# cmd 履歴を検索
if which percol > /dev/null; then
  function percol_select_history() {
    local tac
    if which tac > /dev/null; then
      tac="tac"
    else
      tac="tail -r"
    fi
    BUFFER=$(history -n 1 | eval $tac | percol --query "$LBUFFER")
    CURSOR=$#BUFFER     # move cursor
    zle -R -c           # refresh
  }

  zle -N percol_select_history
  bindkey '^R' percol_select_history
fi

# cd 履歴を記録
typeset -ga chpwd_functions
CD_HISTORY_FILE=${HOME}/.cd_history_file # cd 履歴の記録先ファイル
touch ${CD_HISTORY_FILE}
function chpwd_record_history() {
  echo $PWD >> ${CD_HISTORY_FILE}
}
chpwd_functions+=chpwd_record_history

# percol を使って cd 履歴の中からディレクトリを選択
# 過去の訪問回数が多いほど選択候補の上に来る
function percol_get_destination_from_history() {
  sort ${CD_HISTORY_FILE} | uniq -c | sort -r | \
    sed -e 's/^[ ]*[0-9]*[ ]*//' | \
    sed -e "s/^${HOME//\//\\/}/~/" | \
    percol | xargs echo
}

# percol を使って cd 履歴の中からディレクトリを選択し cd するウィジェット
function percol_cd_history() {
  local destination=$(percol_get_destination_from_history)
  if [ -n "$destination" ]; then
    echo
    cd ${destination/#\~/${HOME}}
    echo "\033[31m=>\033[0m \033[036m$destination\033[0m"
  fi
  zle reset-prompt
}
zle -N percol_cd_history

# percol を使って cd 履歴の中からディレクトリを選択し，現在のカーソル位置に挿入するウィジェット
function percol_insert_history() {
  local destination=$(percol_get_destination_from_history)
  if [ $? -eq 0 ]; then
    local new_left="${LBUFFER} ${destination} "
    BUFFER=${new_left}${RBUFFER}
    CURSOR=${#new_left}
  fi
  zle reset-prompt
}
zle -N percol_insert_history

# C-x ; でディレクトリに cd
# C-x i でディレクトリを挿入
bindkey '^xc' percol_cd_history
bindkey '^xi' percol_insert_history

function lg {
  line=`\git log --pretty=format:'%h <%an> -%d %s' --abbrev-commit --graph --no-color | percol`
  rev=`echo "$line" | awk 'match($0,/[a-f0-9]+/) {print substr($0,RSTART,RLENGTH)}'`
  git $* $rev
}

function eg {
  line=`\git reflog | percol`
  rev=`echo "$line" | awk '{ print $1 }'`
  git $* $rev
}
