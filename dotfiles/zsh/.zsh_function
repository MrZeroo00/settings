## setenv (csh compatibility)
setenv() {
  typeset -x "${1}${1:+=}${(@)argv[2,$#]}"
}


## freload
freload() {
  while (( $# )); do;
    unfunction $1;
    autoload -U $1;
    shift;
  done
}


## Phil!'s ZSH Prompt
#source ${HOME}/.zsh/function/phil_prompt.sh
#add-zsh-hook precmd _phil_prompt
#setprompt


## magic-abbrev-expand
source ${HOME}/.zsh/function/magic-abbrev-expand.sh
#zle -N magic-abbrev-expand
#zle -N no-magic-abbrev-expand
#bindkey " " magic-abbrev-expand
#bindkey "^x " no-magic-abbrev-expand


## dabbrev-complete
source ${HOME}/.zsh/function/dabbrev-complete.sh
zle -C dabbrev-complete menu-complete dabbrev-complete
bindkey '^o' dabbrev-complete
bindkey '^o^_' reverse-menu-complete


## cdd
# http://d.hatena.ne.jp/secondlife/20080218/1203303528
#autoload -U compinit
#compinit
source ${HOME}/.zsh/function/cdd.sh
add-zsh-hook chpwd _reg_pwd_screennum


## view/edit-file
source ${HOME}/.zsh/function/view-edit-file.sh
#zle -N view-file
#bindkey "^x^r" view-file
#zle -N edit-file
#bindkey "^x^f" edit-file


## ssh_screen
function ssh_screen() {
  eval server=\${$#}
    screen -t $server ssh "$@"
}
if [ x${TERM} = x${TERMSCREEN} ]; then
  alias ssh=ssh_screen
fi


# for screen status line
if [ "${TERM}" = ${TERMSCREEN} ]; then
  #chpwd () {
  #_update_screen_title_by_cd () {
  #  echo -n "_`dirs`\\"
  #}
  #add-zsh-hook chpwd _update_screen_title_by_cd

  #preexec() {
  _update_screen_title_by_command () {
    # see [zsh-workers:13180]
    # http://www.zsh.org/mla/workers/2000/msg03993.html
    emulate -L zsh
    local -a cmd; cmd=(${(z)2})
    case $cmd[1] in
      fg)
      if (( $#cmd == 1 )); then
        cmd=(builtin jobs -l %+)
      else
        cmd=(builtin jobs -l $cmd[2])
      fi
      ;;
      %*)
      cmd=(builtin jobs -l $cmd[1])
      ;;
      cd)
      if (( $#cmd == 2)); then
        cmd[1]=$cmd[2]
      fi
      ;;
      *)
      echo -n "k$cmd[1]:t\\"
      prev=$cmd[1]
      return
      ;;
    esac

    local -A jt; jt=(${(kv)jobtexts})

    $cmd >>(read num rest
    cmd=(${(z)${(e):-\$jt$num}})
    echo -n "k$cmd[1]:t\\") 2>/dev/null

    prev=$cmd[1]
  }
  add-zsh-hook preexec _update_screen_title_by_command

  #precmd() {
  #_update_screen_title() {
  #  #local prev; prev=`history -1 | sed "s/^[ 0-9]*//" | sed "s/ .*$//"`
  #  echo -n "k$:${prev}\\"
  #}
  #add-zsh-hook precmd _update_screen_title

  #chpwd
  #_update_screen_title_by_cd
fi


# local setting
if [ -f ${HOME}/.zsh_function.local ]; then
  source ${HOME}/.zsh_function.local
fi
