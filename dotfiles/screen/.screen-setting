## basic settings
autodetach on
deflogin off
defflow off
defscrollback 10000
shell -$SHELL # make the shell in every window a login shell
#password ODSJQf.4IJN7E    # password setting
defzombie q^m
#maxwin 5
msgminwait 0
logfile "$HOME/log/screen-%Y%m%d-%n.log"

# screen blanker
idle 3600
blanker
blankerprg fortune

## 256 color
attrcolor b ".I" # allow bold colors - necessary for some reason
termcapinfo xterm 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm' # tell screen how to set colors. AB = background, AF=foreground
defbce "on" # erase background with current bg color
#term xterm-256color
term screen-bce
#term screen-256color-bce

## notification settings
vbell off
startup_message off

activity "%{=B km}Activity in window %.%{-}"
#bell_msg "%{=B km}Bell in window %.%{-}"
bell_msg "Bell in window %."
bell "Bell in window %."
pow_detach_msg "Screen session of \$LOGNAME \$:cr:\$:nl:ended."

#caption always "%{= wk} %-w%{=bu dr}%n %t%{-}%+w %= %{=b wb}%y/%m/%d(%D) %{=b wb}%c"
caption always "%{=b yk}[%02c] %-w%{=b bw}%n %t%{-}%+w %= %?%1`%? %0`"
#hardstatus ignore "%w | %h"
#hardstatus alwayslastline "%w"
#hardstatus alwayslastline "[%02c] %`%-w%{=b bw}%n %t%{-}%+w"
#hardstatus alwayslastline "[%02c] %-w%{=b bw}%n %t%{-}%+w %= %?%1`%? %0`"
hardstatus alwayslastline "%2`"
defhstatus "^En:^Et"

### terminal settings
## これでステータスラインが消えなくなる
#termcapinfo kterm 'hs:ts=\E[?2S\E[?E\E[?%i%dT:fs=\E[?F:es:ds=\E[?E'
##termcapinfo xterm* 'hs:ts=\E[?E\E[?%i%dT:fs=\E[?F:es:ds=\E[?E'
#
## 反転が変にならない
#termcapinfo kterm 'is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;3;4;6l'
## 縮まない
#termcapinfo kterm 'cl=\E[H\E[2J'
## 反転モードの色
#sorendition 10 93
#
#termcap xterm hs@
#termcapinfo xterm hs@
## Make the output buffer large for (fast) xterms.
#termcapinfo xterm* OL=10000

## key bindings
# prefix key setting
escape ^t^t # prefix key
bind '$' escape ^\^\ # change prefix key at inner screen
bind 'T' escape ^t^t # revert prefix key to C-t

# remove some stupid / dangerous key bindings
bind k # kill
bind \\ # quit
bind z # suspend
bind ^z # suspend
bind x # lockscreen
bind ^g # vbell
bind . # dumptermcap
bind h # hardcopy
# make them better
bind 'K' kill
bind 'I' login on
bind 'O' login off
bind '}' history

bind w windowlist -b
#bind ^] paste [.]
bind 'a' other
bind '^a' other
# bind F10 to Screen's quit command
bindkey -k k; quit

# command line launcher (colon)
bind R colon "screen ssh ^b^b"
bind P colon "^p"

# change character encoding
#bind ^U encoding utf8
#bind ^E encoding euc

# additional key bindings
bind '-' exec screensplit.rb telnet
bind ^k exec $HOME/bin/screen-copy-line.sh

# window management by Emacs key bindings
#bind ^w command -c REGION
#bind -c REGION 2 split
#bind -c REGION 1 only
#bind -c REGION 0 remove
#bind -c REGION o focus
#bind -c REGION ^ resize

# window management by Vim key bindings
bind ^w command -c REGION
bind -c REGION s split
bind -c REGION o only
bind -c REGION c remove
bind -c REGION t focus top
bind -c REGION k focus up
bind -c REGION j focus down
bind -c REGION b focus bottom
bind -c REGION + resize +1
bind -c REGION - resize -1
bind -c REGION = resize =
bind -c REGION _ resize max
bind -c REGION f fit

# switch window
bind ^n eval "next" "echo 'Next window'" "command -c SWITCH"
bind ^p eval "prev" "echo 'Previous window'" "command -c SWITCH"
bind -c SWITCH ^n eval "next" "echo 'Next window'" "command -c SWITCH"
bind -c SWITCH ^p eval "prev" "echo 'Previous window'" "command -c SWITCH"
bind ^a command -c SWITCH

# move window
bind m eval 'echo "Move window"' 'command -c MOVE'
bind -c MOVE ^f eval "exec $HOME/bin/screen-move-window.sh forward " "command -c MOVE"
bind -c MOVE ^b eval "exec $HOME/bin/screen-move-window.sh backward" "command -c MOVE"
bind ^a command -c MOVE

# resize window
bind r eval 'echo "Resize window"' 'command -c RESIZE'
bind -c RESIZE j eval 'resize +1' 'command -c RESIZE'
bind -c RESIZE k eval 'resize -1' 'command -c RESIZE'
bind ^a command -c RESIZE

# launcher
bind ^x	eval 'echo "Launcher:  (f: Firefox) (w: w3m) (p: CPAN) (t: top)"' 'command -c LANUCHER'
bind x eval 'echo "Launcher:  (f: Firefox) (w: w3m) (p: CPAN) (t: top)"' 'command -c LANUCHER'
bind -c LANUCHER f exec $HOME/bin/screen-exec-x.sh -bg firefox
bind -c LANUCHER w screen -t w3m $HOME/bin/screen-exec.sh w3m http://www.google.co.jp/
bind -c LANUCHER p screen -t cpan $HOME/bin/screen-exec.sh perl -MCPAN -e shell
bind -c LANUCHER t screen -t top $HOME/bin/screen-exec.sh top
bind ^a command -c LANUCHER

# copy to X clipboard
bindkey -m ' ' eval 'msgwait 0' 'stuff \040' writebuf 'exec !!! cbcopy /tmp/screen-exchange' 'msgwait 2'
bindkey -m Y eval 'msgwait 0' 'stuff Y' writebuf 'exec !!! cbcopy /tmp/screen-exchange' 'msgwait 2'
bindkey -m y eval 'msgwait 0' 'stuff y' writebuf 'exec !!! cbcopy /tmp/screen-exchange' 'msgwait 2'
bindkey -m W eval 'msgwait 0' 'stuff W' writebuf 'exec !!! cbcopy /tmp/screen-exchange' 'msgwait 2'

# Yet another hack:
# Prepend/append register [/] to the paste if ^a^] is pressed.
# This lets me have autoindent mode in vi.
#register [ "\033:se noai\015a"
#register ] "\033:se ai\015a"
#bind ^] paste [.]
