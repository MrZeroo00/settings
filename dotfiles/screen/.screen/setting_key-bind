## key bindings
# prefix key setting
escape ^t^t # prefix key
bind '$' escape ^\^\ # change prefix key at inner screen
bind 'T' escape ^t^t # revert prefix key to C-t

# remove some stupid / dangerous key bindings
bind k # kill
bind \\ # quit
bind z # suspend
bind ^z # suspend
bind x # lockscreen
bind ^g # vbell
bind . # dumptermcap
bind h # hardcopy
# make them better
bind 'K' kill
bind 'I' login on
bind 'O' login off
bind '}' history

bind w windowlist -b
#bind ^] paste [.]
bind o focus
bind ^t eval 'focus top' 'other'
bind 1 eval 'focus top' 'select 1'
bind 2 eval 'focus top' 'select 2'
bind 3 eval 'focus top' 'select 3'
bind 4 eval 'focus top' 'select 4'
bind 5 eval 'focus top' 'select 5'
bind 6 eval 'focus top' 'select 6'
bind 7 eval 'focus top' 'select 7'
bind 8 eval 'focus top' 'select 8'
bind 9 eval 'focus top' 'select 9'
bind 0 eval 'focus top' 'select 0'
# bind F10 to Screen's quit command
bindkey -k k; quit

# command line launcher (colon)
bind R colon "screen ssh ^b^b"
bind P colon "^p"

# change character encoding
#bind ^U encoding utf8
#bind ^E encoding euc

# additional key bindings
#bind '-' exec screensplit telnet
bind '-' exec $HOME/bin/screen/screen_split --toggle w3m 8
bind ^w exec $HOME/bin/screen/screen_copy_word -e
bind ^j exec $HOME/bin/screen/screen_copy_word -j
bind ^k exec $HOME/bin/screen/screen_copy_line

# window management by Emacs key bindings
#bind ^w command -c REGION
#bind -c REGION 2 split
#bind -c REGION 1 only
#bind -c REGION 0 remove
#bind -c REGION o focus
#bind -c REGION ^ resize

# window management by Vim key bindings
bind ^w command -c REGION
bind -c REGION s split
bind -c REGION o only
bind -c REGION c remove
bind -c REGION t focus top
bind -c REGION k focus up
bind -c REGION j focus down
bind -c REGION b focus bottom
bind -c REGION h focus left
bind -c REGION l focus right
bind -c REGION + resize +1
bind -c REGION - resize -1
bind -c REGION = resize =
bind -c REGION _ resize max
bind -c REGION f fit

# switch window
bind ^n eval "next" "echo 'Next window'" "command -c SWITCH"
bind ^p eval "prev" "echo 'Previous window'" "command -c SWITCH"
bind -c SWITCH ^n eval "next" "echo 'Next window'" "command -c SWITCH"
bind -c SWITCH ^p eval "prev" "echo 'Previous window'" "command -c SWITCH"
bind ^a command -c SWITCH

# move window
bind m eval 'echo "Move window"' 'command -c MOVE'
bind -c MOVE ^f eval "exec $HOME/bin/screen/screen_move_window forward " "command -c MOVE"
bind -c MOVE ^b eval "exec $HOME/bin/screen/screen_move_window backward" "command -c MOVE"
bind ^a command -c MOVE

# resize window
bind r eval 'echo "Resize window"' 'command -c RESIZE'
bind -c RESIZE j eval 'resize +1' 'command -c RESIZE'
bind -c RESIZE k eval 'resize -1' 'command -c RESIZE'
bind ^a command -c RESIZE

# launcher
bind ^x	eval 'echo "Launcher:  (f: Firefox) (w: w3m) (p: CPAN) (t: top)"' 'command -c LANUCHER'
bind x eval 'echo "Launcher:  (f: Firefox) (w: w3m) (p: CPAN) (t: top)"' 'command -c LANUCHER'
bind -c LANUCHER f exec $HOME/bin/screen/screen_exec_x -bg firefox
bind -c LANUCHER w screen -t w3m $HOME/bin/screen/screen_exec w3m http://www.google.co.jp/
bind -c LANUCHER p screen -t cpan $HOME/bin/screen/screen_exec perl -MCPAN -e shell
bind -c LANUCHER t screen -t top $HOME/bin/screen/screen_exec top
bind ^a command -c LANUCHER

# copy to X clipboard
bindkey -m ' ' eval 'msgwait 0' 'stuff \040' writebuf 'exec !!! cbcopy /tmp/screen-exchange' 'msgwait 2'
bindkey -m Y eval 'msgwait 0' 'stuff Y' writebuf 'exec !!! cbcopy /tmp/screen-exchange' 'msgwait 2'
bindkey -m y eval 'msgwait 0' 'stuff y' writebuf 'exec !!! cbcopy /tmp/screen-exchange' 'msgwait 2'
bindkey -m W eval 'msgwait 0' 'stuff W' writebuf 'exec !!! cbcopy /tmp/screen-exchange' 'msgwait 2'

# Yet another hack:
# Prepend/append register [/] to the paste if ^a^] is pressed.
# This lets me have autoindent mode in vi.
#register [ "\033:se noai\015a"
#register ] "\033:se ai\015a"
#bind ^] paste [.]
