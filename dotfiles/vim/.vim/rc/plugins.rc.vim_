"---------------------------------------------------------------------------
" Plugin:
"

"" my
"" CodeReviewer
let g:CodeReviewer_reviewer = "Mitsuhiro Tanda"

"" go
let g:gofmt_command = 'goimports'
let g:gocomplete#system_function = 'vimproc#system'

"" gtags
let Gtags_Close_When_Single = 1
let Gtags_Auto_Update = 1
nmap ,gtags :Gtags <C-R><C-W><CR>
nmap ,gr :Gtags -r <C-R><C-W><CR>
nmap ,gs :Gtags -s <C-R><C-W><CR>
nmap ,gg :Gtags -g <C-R><C-W><CR>
nmap <C-n> :cnext<CR>
nmap <C-p> :cprevious<CR>
map <C-]> :GtagsCursor<CR>
"nmap <C-J> <C-W>j<C-W>_
"nmap <C-K> <C-W>k<C-W>_

"" howm
set runtimepath+=$HOME/etc/howm_vim
let g:howm_dir="$HOME/howm"
let g:howm_grepprg="/bin/egrep"
let g:howm_findprg="/usr/bin/find"

"" im_control.vim
let g:IM_CtrlBufLocalMode = 1

" indentLine
"if neobundle#tap('indentLine') "{{{
"  let g:indentLine_color_term = 111
"  let g:indentLine_color_gui = '#708090'
"  let g:indentLine_char = '¦'
"endif "}}}

"" taglist
nmap ,tlist :Tlist<CR>

"" vim-expand-regin
"if neobundle#tap('vim-expand-region') "{{{
"  vmap v <Plug>(expand_region_expand)
"  vmap <C-v> <Plug>(expand_region_shrink)
"endif "}}}

"" vim-quickhl
if neobundle#tap('vim-quickhl') "{{{
  nmap <Space>m <Plug>(quickhl-manual-this)
  xmap <Space>m <Plug>(quickhl-manual-this)
  nmap <Space>M <Plug>(quickhl-manual-reset)
  xmap <Space>M <Plug>(quickhl-manual-reset)

  call neobundle#untap()
endif "}}}

"" vim-tmux-navigator
"if neobundle#tap('vim-tmux-navigator') "{{{
"  let g:tmux_navigator_no_mappings = 1
"
"  nnoremap <silent> {Left-mapping} :TmuxNavigateLeft<CR>
"  nnoremap <silent> {Down-Mapping} :TmuxNavigateDown<CR>
"  nnoremap <silent> {Up-Mapping} :TmuxNavigateUp<CR>
"  nnoremap <silent> {Right-Mapping} :TmuxNavigateRight<CR>
"  nnoremap <silent> {Previous-Mapping} :TmuxNavigatePrevious<CR>
"endif "}}}

"" Vdebug
"let g:vdebug_options['port'] = 9000
"let g:vdebug_options['server'] = 'localhost'
"let g:vdebug_options['timeout'] = 20
"let g:vdebug_options['on_close'] = 'detach'
"let g:vdebug_options['break_on_open'] = 0
"let g:vdebug_options['ide_key'] = 'netbeans-xdebug'
"let g:vdebug_options['path_maps'] = {}
"let g:vdebug_options['debug_window_level'] = 0
"let g:vdebug_options['debug_file_level'] = 0
"let g:vdebug_options['debug_file'] = ''
"let g:vdebug_options['watch_window_style'] = 'expanded'
"let g:vdebug_options['marker_default'] = '⬦'
"let g:vdebug_options['marker_closed_tree'] = '▸'
"let g:vdebug_options['marker_open_tree'] = '▾'

"" yankround.vim
if neobundle#tap('yankround.vim') " {{{
  nmap p <Plug>(yankround-p)
  xmap p <Plug>(yankround-p)
  nmap P <Plug>(yankround-P)
  nmap gp <Plug>(yankround-gp)
  xmap gp <Plug>(yankround-gp)
  nmap gP <Plug>(yankround-gP)
  nmap <C-p> <Plug>(yankround-prev)
  nmap <C-n> <Plug>(yankround-next)

  call neobundle#untap()
endif " }}}
