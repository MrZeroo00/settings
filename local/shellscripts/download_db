#!/usr/bin/env perl
use strict;
use warnings;
use File::Find;
#use File::Spec;
use File::stat;
use POSIX 'strftime';
use DBI;


# settings
my $table_name = "download";
my $db_file = "movies.db";


my $dbh = DBI->connect("dbi:SQLite:dbname=${db_file}");

sub entry_exist {
  my $sql = $_[0];
  my $sth = $dbh->prepare($sql);
  $sth->execute;

  if ($sth->fetchrow_array) {
    return 1;
  }
  return 0;
}

sub db_exist {
  my $table_name = $_[0];
  return entry_exist("select name FROM sqlite_master WHERE type='table' and name='$table_name'");
}

unless (db_exist($table_name)) {
  my $create_table = "create table ${table_name} (" .
                         "id integer," .
                         "uri text," .
                         "referer text," .
                         "status integer" .
                     ");";
  $dbh->do($create_table);
  $dbh->do("create index id_index on ${table_name}(id);");
  print "Create DB table!\n";
}

sub get_id() {
  my $sql = "select max(id) from ${table_name};";
  my $sth = $dbh->prepare($sql);
  $sth->execute;

  my @row = $sth->fetchrow_array;
  if ($row[0]) {
    return int($row[0]) + 1;
  }
  return 1;
}

my $id = get_id();
my $uri = shift;
my $referer = shift;
my $status = shift;
my @values = ($id, $uri, $referer, $status);

my $values_str = join ", ", map { "'$_'" } @values;

unless (entry_exist("select uri from ${table_name} where uri='${uri}'")) {
  $dbh->do("insert into ${table_name} (id, uri, referer, status) values (" . $values_str . ");");
} else {
  $dbh->do("update ${table_name} set status = '${status}' where uri = '${uri}';");
}

$dbh->disconnect;
