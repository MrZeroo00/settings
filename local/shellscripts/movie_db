#!/usr/bin/env perl
use strict;
use warnings;
use Switch;
use File::Find;
#use File::Spec;
use File::stat;
use POSIX 'strftime';
use DBI;


# settings
my $table_name = "movies";
my $db_file = "movies.db";


if (@ARGV < 1) {
  die "Error."
}

my $dbh = DBI->connect("dbi:SQLite:dbname=${db_file}");


# utility
sub entry_exist {
  my $sql = $_[0];
  my $sth = $dbh->prepare($sql);
  $sth->execute;

  if ($sth->fetchrow_array) {
    return 1;
  }
  return 0;
}

sub db_exist {
  my $table_name = shift;
  return entry_exist("select name FROM sqlite_master WHERE type='table' and name='$table_name'");
}

sub registered {
  my $path = shift;
  return entry_exist("select path from ${table_name} where path='${path}'");
}

sub get {
  my ($path, $param) = @_;

  my $sth = $dbh->prepare("select ${param} from ${table_name} where path='${path}'");
  $sth->execute;

  my @result = $sth->fetchrow_array;
  if (defined($result[0])) {
    print $result[0], "\n";
    return $result[0];
  }
  return;
}

sub set {
  my ($path, $param, $val) = @_;

  if (registered($path)) {
    $dbh->do("update ${table_name} set ${param} = '${val}' where path = '${path}';");
  }
}


# register
sub register {
  unless (db_exist($table_name)) {
    my $create_table = "create table ${table_name} (" .
    #"id integer," .
                           "path text," .
                           "name text," .
                           "mdate text," .
                           "mtime text," .
                           "cdate text," .
                           "ctime text," .
                           "star integer" .
                       ");";
    $dbh->do($create_table);
    #$dbh->do("create index id_index on ${table_name}(id);");
    $dbh->do("create index path_index on ${table_name}(path);");
    print "Create DB table!\n";
  }
  
  find(\&wanted, ('./'));
  sub wanted {
    my $name = $_;
    return unless ($name =~ /(\.wmv$|\.rm$)/);
  
    my $dir = $File::Find::dir;
    my $path = $File::Find::name;
    #my $realpath = File::Spec->rel2abs($path);
  
    my $stat = stat $name;
    my @mtime = localtime($stat->mtime);
    my @ctime = localtime($stat->ctime);
  
    my @values = ($path, $name,
                      strftime("%Y-%m-%d", @mtime),
                      strftime("%H-%M-%S", @mtime),
                      strftime("%Y-%m-%d", @ctime),
                      strftime("%H-%M-%S", @ctime),
                      0
                 );
  
    my $values_str = join ", ", map { "'$_'" } @values;
  
    unless (registered($path)) {
      $dbh->do("insert into ${table_name} (path, name, mdate, mtime, cdate, ctime, star) values (" . $values_str . ");");
    }
  }
}


switch ($ARGV[0]) {
  case "register" { register() }
  case "get" { get($ARGV[2], $ARGV[1]) }
  case "set" { set($ARGV[3], $ARGV[1], $ARGV[2]) }
  else { die "Error: Unknown operation." }
}


$dbh->disconnect;
